buildscript {
    repositories {
        google()
        mavenCentral()
        maven { url "https://jitpack.io" }
        maven { url "https://plugins.gradle.org/m2/" }
        gradlePluginPortal()
    }

    dependencies {
        classpath 'com.android.tools.build:gradle:8.5.1'
        // Removed bintray plugin as it's deprecated and causing dependency issues
        // classpath 'com.jfrog.bintray.gradle:gradle-bintray-plugin:1.8.1'
    }
}

apply plugin: 'com.android.library'

ext {
    libraryName = 'PdfiumAndroid'
    libraryDescription = 'Fork of library for rendering PDFs on Android\'s Surface or Bitmap'
    libraryVersion = '2.0.0'
}

android {
    namespace 'com.shockwave.pdfium'
    compileSdkVersion 35

    defaultConfig {
        minSdkVersion 26
        targetSdkVersion 35
        versionCode 2
        versionName "2.0.0"
        buildConfigField "String", "VERSION_NAME", "\"${versionName}\""
        /*
        // Support for 16KB page size devices (Android 14+)
        ndk {
            abiFilters 'arm64-v8a', 'armeabi-v7a', 'x86', 'x86_64'
        }*/
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_17
        targetCompatibility JavaVersion.VERSION_17
    }

    sourceSets{
        main {
            jni.srcDirs = []
//            jniLibs.srcDir 'src/main/libs'
            jniLibs.srcDir 'src/main/jni/lib'
        }
    }

    buildFeatures {
        viewBinding true
        buildConfig true
    }

    // Configure for 16KB page size support
    packagingOptions {
        jniLibs {
            useLegacyPackaging = false
        }
    }
}

// AAR filename will be auto-generated by JitPack

// Simple approach for JitPack - just copy AAR to Maven local
task publishToMavenLocal {
    dependsOn 'assemble'
    doLast {
        def groupPath = 'com/github/mpraveenVgyan/PdfiumAndroid/2.0.0'
        def mavenLocalDir = new File(System.getProperty('user.home'), '.m2/repository/' + groupPath)
        mavenLocalDir.mkdirs()
        
        // Copy release AAR
        def releaseAar = file('build/outputs/aar/pdfium-android-release.aar')
        if (releaseAar.exists()) {
            copy {
                from releaseAar
                into mavenLocalDir
                rename 'pdfium-android-release.aar', 'PdfiumAndroid-2.0.0.aar'
            }
            println "Copied release AAR to Maven local: ${mavenLocalDir}"
        }
        
        // Create POM file
        def pomFile = new File(mavenLocalDir, 'PdfiumAndroid-2.0.0.pom')
        pomFile.text = '''<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <groupId>com.github.mpraveenVgyan</groupId>
    <artifactId>PdfiumAndroid</artifactId>
    <version>2.0.0</version>
    <packaging>aar</packaging>
    <name>PdfiumAndroid</name>
    <description>Fork of library for rendering PDFs on Android's Surface or Bitmap</description>
    <dependencies>
        <dependency>
            <groupId>androidx.collection</groupId>
            <artifactId>collection</artifactId>
            <version>1.3.0</version>
            <scope>compile</scope>
        </dependency>
    </dependencies>
</project>'''
        
        println "AAR files published to Maven local for JitPack"
    }
}

repositories {
    google()
//    jcenter()
    mavenCentral()
    maven { url "https://jitpack.io" }
//    maven { url "https://maven.aliyun.com/repository/jcenter" }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation 'androidx.collection:collection:1.3.0'
}

//apply from: 'https://raw.githubusercontent.com/nuuneoi/JCenter/master/installv1.gradle'
//apply from: 'https://raw.githubusercontent.com/nuuneoi/JCenter/master/bintrayv1.gradle'

// JitPack will automatically create the publication
